<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use DB;
use Mail;

class GuestController extends Controller
{
    public function park()
    {
        return view('guest.park');
    }
    public function park_save( Request $request )
    {
         //to validate the data  input by the user
         $this->validate($request,[
            'preffix'=>'required|max:3|alpha',
            'numeric'=>'required',
            'suffix'=>'alpha|max:1',
            'name'=>'required',
            'space_id'=>'required',
            'phone'=>'required|max:12|min:10'
        ]);

        $preffix= $request->input('preffix'); 
        $numeric=$request->input('numeric');
        $suffix=$request->input('suffix');   
        $no_plate=$preffix.$numeric.$suffix;
       
        
        //to get the actual id from the  street alias input by the user
        $i = DB::table('spaces')
        ->where('st_id','=',$request->space_id)
        ->get();
        $space_id=$i[0]->id;
        
        //to Automatically add clients
        $client = \App\clients::updateOrCreate(
            ['no_plate' => $no_plate],
            [ 'name' => $request->input('name'),'phone' => $request->input('phone')]
        );       
        $record = new \App\Record;
        $preffix= $request->input('preffix'); 
        $numeric=$request->input('numeric');
        $suffix=$request->input('suffix');   
        $record->no_plate=strtoupper($preffix.$numeric.$suffix);
        $record->phone=$request->input('phone');   
        $record->name=strtoupper($request->input('name'));
        $i = DB::table('spaces')
            ->where('st_id','=',$request->space_id)
            ->get();
        $record->space_id=$space_id;
        $record->save();

        // Now to check if the parked vehicle has some outstanding charges 
        // we first query the offenders table
        $pending = DB::table('offenders')
                    ->where('no_plate','=',$record->no_plate)
                    ->get();
        // isset() checks if the query above actually returned records
        if (isset($pending)) {
            $task = new \App\Task;
            $task->name = $record->name;
            $task->phone = $record->phone;
            // we use the space-record, one to many relationship
            $slot = ($request->input('space_id'));
            $slot=str_split($slot, 4);
            $task->location = $record->space->location.','.$record->space->street.'street , Slot:'.$slot[1];
            $task->destination = 'Impound!';
            //A type two task will alert the parking attendant
            $task->type = 1; #this indicartes the request was generated by the system  automaticaly
            $task->no_plate = $record->no_plate;
            $task->status = 0;
            $task->save();
        }
        
        return redirect('/')->with('message','Space Booked Succesfully');
    }
    public function guest_request()
    {
        return view('guest.request');
    }
    public function request_save(Request $request)
    {
        $this->validate($request,[
            'name'=>'required',
            'phone'=>'required|max:12|min:10',
            'town'=>'required'

            
        ]);
        // To check if the Car is at a slot
        $locate = DB::table('spaces')
                    ->where('st_id','=',$request->input('town'))
                    ->get();
       
        if($locate->isNotEmpty()){
            $town = $locate[0]->location;
            $street= $locate[0] ->street;
            $slot = str_split($locate[0]->st_id,4);
            $slot = $slot[1];
            $actuallocation= $town.' '.','.' '.$street.' '.'street,'.' '.'slot number'.' '.$slot;
        }else {
            $actuallocation= $request->input('town').','.$request->input('description');
        }
        $plate =$request->input('preffix').$request->input('numeric').$request->input('suffix');
        //to chek if the client details had already been recorded if not Record it,
            
        $client = \App\clients::updateOrCreate(
                ['no_plate' => $plate],
                [ 'name' => $request->input('name'),'phone' => $request->input('phone'),'email'=>$request->input('email')]
            );
        

        //This is the one generated when a guest log in... must find a user generated.... when c;<amped class=""></amped>
        $task=  new \App\Task;;
        $task->no_plate =  $plate;
        $task->name= $request->input('name');
        $task->location = $actuallocation;
        $task->destination = $request->input('destination');
        $task->phone= $request->input('phone');
        $task->status=0;
        $task->type=0;
        if (null !== ($request->input('email'))) {
            $task->email=$request->input('email');
        }
        
        $task->token=$request->session()->get('_token');
        $task->save();
        //Uncomment this and the app wiill send mail to the users email if set...
        //Mail::to($task->email)->send(new CancelRequest($task));
        return redirect('/')->withStatus('success','Your Request has been successfully submitted');
    }
}
